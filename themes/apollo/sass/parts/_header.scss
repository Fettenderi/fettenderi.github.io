#title {
    font-size: 1.1em;
    letter-spacing: 1px;
}

#description {
    font-size: 0.65em;
    letter-spacing: 1px;
    padding-top: 10px;
}

nav {
    flex-wrap: wrap;
    align-items: flex-end;
}

#menu-item {
    margin-left: 0.5em;
    display: inline-block;
}

.page-header {
    font-size: 2.5em;
    line-height: 100%;
    font-family: var(--header-font);
    margin: 1rem 0px 1rem 0px;
}

.centered-header {
    font-family: var(--header-font);
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    text-wrap: nowrap;
    font-size: 4em;
}

header {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    padding: 4em 0 1em 0;
}

header .main {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: flex-start;
    gap: 12px;
    font-size: 1.9rem;

    /* Otherwise header and menu is too close on small screens*/
    margin-bottom: 5px;
}

header .social img,
header #dark-mode-toggle img {
    width: 16px;
    height: 16px;
}

header .socials {
    margin-bottom: 10px;
    /* Space between social icons and menu items */
}

#dark-mode-toggle {
    justify-content: center;
}

.socials {
    /* flex-child */
    flex-grow: 0;
    /* flex-container */
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: flex-end;
    gap: 6px;
}

.social {
    border-bottom: unset;
    background-image: unset;
    padding: 2px;
}

.social-icon {
    border: unset;
    width: 5rem;
    height: 24px;
}

.meta {
    color: #999;
    display: flexbox;
    /* This changes the meta class to use flexbox, which ensures inline display */
    align-items: center;
    /* Aligns items vertically in the middle */
    flex-wrap: wrap;
    /* Allows items to wrap as needed */
}

#dark-mode-toggle>img {
    display: none;
    width: 15px;
    height: 15px;
    border: unset;
}

@function str-repeat($n) {
    $result: ''; // Inizializza una stringa vuota
    @for $i from 1 through $n {
      $result: $result + '#'; // Aggiunge un '#' per ogni ciclo
    }
    @return $result;
  }

@for $i from 1 through 6 {
    h#{$i} {
        color: var(--secondary-color);
        font-size: 1.2rem;
        margin-top: 2em;
    }

    h#{$i}::before {
        color: var(--primary-color);
        content: str-repeat($i) + ' ';
    }
}

@for $i from 1 through 3 {
    h#{$i} {
        font-size: 1.8rem - 0.2 * $i;
    }
}
